import numpy as np

np.set_printoptions(suppress=True)


def l1_normalize(x, epsilon=1e-10):
    output = x / np.maximum(np.sum(np.abs(x)), epsilon)
    return output


if __name__ == '__main__':
    skb = np.array([1.01201681e+08, 6.28210292e+09, 5.02352322e+07, 1.47366457e+09,
                    2.12300444e+06, 2.12300444e+06, 6.71196507e+04, 1.59312948e+03])
    ref = np.array([-19124564, -12148496, 2494202, -5203794, 19331822, 19331822,
                    19220976, 19354746])
    a = skb.reshape(1, -1)[0]
    b = ref.reshape(1, -1)[0]
    print(a)
    print("==============================================")
    print(b)
    print("======================SKB=======================")
    print(l1_normalize(a))
    print("======================REF=======================")
    print(l1_normalize(b))
    print("======================相加权重=======================")
    c = l1_normalize(a) + l1_normalize(b)
    print(c)
    print("======================相乘权重=======================")
    d = l1_normalize(a) * l1_normalize(b)
    print(d)
    print("======================熵权法=======================")
    e = l1_normalize(a) * 0.855098628850797 + l1_normalize(b) * 0.144901371149203
    print(e)
# ======================SKB=======================
# [0.01279169 0.79404509 0.00634963 0.18626822 0.00026834 0.00026834
#  0.00000848 0.0000002 ]
# ======================REF=======================
# [-0.16456841 -0.10453878  0.02146281 -0.04477906  0.16635188  0.16635188
#   0.16539804  0.16654914]
# ======================相加权重=======================
# [-0.15177672  0.68950631  0.02781244  0.14148915  0.16662022  0.16662022
#   0.16540652  0.16654934]
# ======================相乘权重=======================
# [-0.00210511 -0.08300851  0.00013628 -0.00834092  0.00004464  0.00004464
#   0.0000014   0.00000003]
# ======================熵权法=======================
# [-0.01290803  0.66383906  0.00853955  0.15278915  0.02433408  0.02433408
#   0.02397366  0.02413337]
